@RestController
public class Controller {

    @Autowired
    IPersona ipersona;

    @RequestMapping(value = "/persona", method = RequestMethod.POST)
    IPersona postPersona(@RequestBody Persona persona){
        ipersona.addPersona(persona);
        return ipersona;
    }

    @RequestMapping(value = "/persona", method = RequestMethod.GET)
    IPersona getListaPersonas(){
        return ipersona;
    }

    @RequestMapping(value = "/persona/{id}", method = RequestMethod.GET)
    Persona getPersonaById(@PathVariable String id){
        return ipersona.getPersonaById(id);
    }

    @RequestMapping(value = "/persona/{id}", method = RequestMethod.DELETE)
    Persona deletePersonaById(@PathVariable String id){
        return ipersona.deletePersonaById(id);
    }

    @RequestMapping(value = "/persona/nombre/{name}", method = RequestMethod.GET)
    Persona getPersonaByName(@PathVariable String name){
        return ipersona.getPersonaByName(name);
    }

    @RequestMapping(value = "/persona/{id}", method = RequestMethod.PUT)
    Persona updatePersonaById(@RequestBody Persona persona, @PathVariable String id){
        return ipersona.updatePersonaById(persona,id);
    }


}


@Service
public class ImpPersona implements IPersona{

    List<Persona> personaList = new ArrayList<>();

    public List<Persona> getListPersonas(){
        return personaList;
    }

    public Persona getPersonaById(String id){
        Persona persona = personaList.stream()
                .filter(p-> id.equals(p.getId())).findFirst().orElse(null);
            return persona;
    }

    public Persona getPersonaByName(String name){
        Persona persona = personaList.stream()
                .filter(p-> name.equals(p.getName())).findFirst().orElse(null);
        return persona;
    }

    public Persona updatePersonaById(Persona persona, String id){
        Persona personaById = getPersonaById(id);
        if(persona.getName() != null){
            personaById.setName(persona.getName());
        }
        if (persona.getLocation() != null){
            personaById.setLocation(persona.getLocation());
        }
        if (persona.getAge() != null){
            personaById.setAge(persona.getAge());
        }
        if (persona.getId() != null){
            personaById.setId(persona.getId());
        }


        return personaById;
    }

    public Persona deletePersonaById(String id){
        Persona deletedPersona = getPersonaById(id);
        personaList.remove(deletedPersona);
        return deletedPersona;
    }
    public void addPersona(Persona persona){
        personaList.add(persona);
    }

}


